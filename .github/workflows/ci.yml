name: CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # ───────────────────────── Python toolchain ──────────────────────────
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"          # pip wheel cache (complements Poetry cache)

      # ───────────────────────── Misc dependencies ─────────────────────────
      - name: Install misc dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y portaudio19-dev

      # ───────────────────────── Poetry + dependency cache ─────────────────
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry self add poetry-plugin-export

      - name: Cache Poetry packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Install deps (prod + dev)
        run: |
          poetry install --with dev --no-interaction --no-root

      # ───────────────────────── Lint & tests ──────────────────────────────
      - name: Lint
        run: poetry run make lint

      - name: Unit tests
        run: poetry run make tests-all

      - name: Pip audit
        run: |
          poetry export --format requirements.txt --without-hashes --output requirements.txt
          poetry run pip-audit -r requirements.txt

      - name: Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          exit-code: '1'
          # ⬇️  Skip the Ruby runtime that pact‑python vendors
          skip-dirs: |
            **/pact/lib/vendor

      # ───────────────────────── Container build & smoke test (main only) ─
      - name: Build container images
        if: github.ref == 'refs/heads/main'
        run: docker compose -f ./docker-compose.yml build
